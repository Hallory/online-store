server:
  port: 8081

logging:
  level.org.springframework.security: TRACE
  file.name: ${logging.file.path}/backend.log
  file.path: logs/dev
  logback:
    rollingpolicy.file-name-pattern: ${logging.file.name}.%d{yyyy-MM-dd}.%i.gz
    rollingpolicy.clean-history-on-start: false
    rollingpolicy.max-file-size: 10MB
    rollingpolicy.total-size-cap: 100MB
    rollingpolicy.max-history: 7

spring:
  application.name: backend
  profiles.active: test

  datasource:
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  liquibase:
    changeLog: classpath:db/changelog/db.changelog-master.yaml
    enabled: false

  security:
    oauth2.resourceserver.jwt.issuer-uri: http://${AUTH_HOST:localhost}:${AUTH_PORT:8080}/realms/${AUTH_REALM:quickstart}

keycloak:
  backend-client:
    auth-server-url: http://${AUTH_HOST:localhost}:${AUTH_PORT:8080}
    realm: ${KEYCLOAK_BACKEND_CLIENT_REALM:quickstart}
    client: ${KEYCLOAK_BACKEND_CLIENT_ID:admin-rest-backend}
    credentials.secret: ${KEYCLOAK_BACKEND_CLIENT_SECRET}

---
spring:
  config.activate.on-profile: test
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5433/${POSTGRES_DB:es-test}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres-test}
  jpa:
    hibernate.ddl-auto: create-drop
    show-sql: true
server:
  port: 8081

logging:
  level.org.springframework.security: TRACE
  file.name: ${logging.file.path}/backend-test.log
  file.path: logs/test
---
spring:
  config.activate.on-profile: dev
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
  jpa:
    hibernate.ddl-auto: none
    show-sql: true
  liquibase.enabled: true

---
spring:
  config.activate.on-profile: prod
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
  jpa:
    hibernate.ddl-auto: none
  liquibase.enabled: true